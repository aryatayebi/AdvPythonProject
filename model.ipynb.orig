{
 "cells": [
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 24,
=======
   "execution_count": 1,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('finalNbaData.csv')\n",
=======
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('allNbaData.csv')\n",
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
    "ss = pd.read_csv('sentiment_results.csv')"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 53,
=======
   "execution_count": 3,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gameID</th>\n",
       "      <th>homeTeam</th>\n",
       "      <th>awayTeam</th>\n",
       "      <th>homePositive</th>\n",
       "      <th>homeNegative</th>\n",
       "      <th>homeNeutral</th>\n",
       "      <th>awayPositive</th>\n",
       "      <th>awayNegative</th>\n",
       "      <th>awayNeutral</th>\n",
       "      <th>total_tweets_analyzed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>GSDEN4272022</td>\n",
       "      <td>Golden State Warriors</td>\n",
       "      <td>Denver Nuggets</td>\n",
       "      <td>39.200000</td>\n",
       "      <td>4.800000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>47.826087</td>\n",
       "      <td>3.804348</td>\n",
       "      <td>48.369565</td>\n",
       "      <td>434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MEMMIN4262022</td>\n",
       "      <td>Memphis Grizzlies</td>\n",
       "      <td>Minnesota Timberwolves</td>\n",
       "      <td>49.509804</td>\n",
       "      <td>4.411765</td>\n",
       "      <td>46.078431</td>\n",
       "      <td>52.380952</td>\n",
       "      <td>9.047619</td>\n",
       "      <td>38.571429</td>\n",
       "      <td>414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MIAATL4262022</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>34.170854</td>\n",
       "      <td>12.060302</td>\n",
       "      <td>53.768844</td>\n",
       "      <td>36.842105</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>54.824561</td>\n",
       "      <td>427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MILCHI4272022</td>\n",
       "      <td>Milwaukee Bucks</td>\n",
       "      <td>Chicago Bulls</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>5.200000</td>\n",
       "      <td>46.800000</td>\n",
       "      <td>49.145299</td>\n",
       "      <td>7.692308</td>\n",
       "      <td>43.162393</td>\n",
       "      <td>484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MINMEM4292022</td>\n",
       "      <td>Minnesota Timberwolves</td>\n",
       "      <td>Memphis Grizzlies</td>\n",
       "      <td>43.203883</td>\n",
       "      <td>11.165049</td>\n",
       "      <td>45.631068</td>\n",
       "      <td>45.490196</td>\n",
       "      <td>7.450980</td>\n",
       "      <td>47.058824</td>\n",
       "      <td>461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>NOPHO4282022</td>\n",
       "      <td>New Orleans Pelicans</td>\n",
       "      <td>Phoenix Suns</td>\n",
       "      <td>44.565217</td>\n",
       "      <td>8.695652</td>\n",
       "      <td>46.739130</td>\n",
       "      <td>48.437500</td>\n",
       "      <td>10.937500</td>\n",
       "      <td>40.625000</td>\n",
       "      <td>376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PHONO4262022</td>\n",
       "      <td>Phoenix Suns</td>\n",
       "      <td>New Orleans Pelicans</td>\n",
       "      <td>51.639344</td>\n",
       "      <td>12.295082</td>\n",
       "      <td>36.065574</td>\n",
       "      <td>61.025641</td>\n",
       "      <td>9.230769</td>\n",
       "      <td>29.743590</td>\n",
       "      <td>439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>TORPHI4282022</td>\n",
       "      <td>Toronto Raptors</td>\n",
       "      <td>Philadelphia 76ers</td>\n",
       "      <td>45.255474</td>\n",
       "      <td>12.043796</td>\n",
       "      <td>42.700730</td>\n",
       "      <td>40.654206</td>\n",
       "      <td>10.280374</td>\n",
       "      <td>49.065421</td>\n",
       "      <td>488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>UTADAL4282022</td>\n",
       "      <td>Utah Jazz</td>\n",
       "      <td>Dallas Mavericks</td>\n",
       "      <td>42.241379</td>\n",
       "      <td>16.810345</td>\n",
       "      <td>40.948276</td>\n",
       "      <td>46.012270</td>\n",
       "      <td>7.975460</td>\n",
       "      <td>46.012270</td>\n",
       "      <td>395</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          gameID                homeTeam                awayTeam  \\\n",
       "0   GSDEN4272022   Golden State Warriors          Denver Nuggets   \n",
       "1  MEMMIN4262022       Memphis Grizzlies  Minnesota Timberwolves   \n",
       "2  MIAATL4262022              Miami Heat           Atlanta Hawks   \n",
       "3  MILCHI4272022         Milwaukee Bucks           Chicago Bulls   \n",
       "4  MINMEM4292022  Minnesota Timberwolves       Memphis Grizzlies   \n",
       "5   NOPHO4282022    New Orleans Pelicans            Phoenix Suns   \n",
       "6   PHONO4262022            Phoenix Suns    New Orleans Pelicans   \n",
       "7  TORPHI4282022         Toronto Raptors      Philadelphia 76ers   \n",
       "8  UTADAL4282022               Utah Jazz        Dallas Mavericks   \n",
       "\n",
       "   homePositive  homeNegative  homeNeutral  awayPositive  awayNegative  \\\n",
       "0     39.200000      4.800000    56.000000     47.826087      3.804348   \n",
       "1     49.509804      4.411765    46.078431     52.380952      9.047619   \n",
       "2     34.170854     12.060302    53.768844     36.842105      8.333333   \n",
       "3     48.000000      5.200000    46.800000     49.145299      7.692308   \n",
       "4     43.203883     11.165049    45.631068     45.490196      7.450980   \n",
       "5     44.565217      8.695652    46.739130     48.437500     10.937500   \n",
       "6     51.639344     12.295082    36.065574     61.025641      9.230769   \n",
       "7     45.255474     12.043796    42.700730     40.654206     10.280374   \n",
       "8     42.241379     16.810345    40.948276     46.012270      7.975460   \n",
       "\n",
       "   awayNeutral  total_tweets_analyzed  \n",
       "0    48.369565                    434  \n",
       "1    38.571429                    414  \n",
       "2    54.824561                    427  \n",
       "3    43.162393                    484  \n",
       "4    47.058824                    461  \n",
       "5    40.625000                    376  \n",
       "6    29.743590                    439  \n",
       "7    49.065421                    488  \n",
       "8    46.012270                    395  "
      ]
     },
<<<<<<< HEAD
     "execution_count": 53,
=======
     "execution_count": 3,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ss"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 54,
=======
   "execution_count": 4,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(['Unnamed: 0', 'sport', 'awayDiff', 'awayOutcome', 'gameState', 'homeDiff', 'sbId', 'score', 'total', '__id__', 'dateTime', 'under'], 1)\n",
    "df = df.rename(columns={'id': 'gameID'})\n",
    "df = df[['gameID', 'homeTeam', 'awayTeam', 'awayOdds', 'awaySpread', 'awaySpreadOdds', 'homeOdds', 'homeSpread', 'homeSpreadOdds', 'over', 'overOdds', 'underOdds', 'homeOutcome']]\n",
    "df['y'] = np.where(df.homeOutcome == 'W', 1, 0)\n",
    "df = df.drop('homeOutcome', 1)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 55,
=======
   "execution_count": 5,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gameID</th>\n",
       "      <th>homeTeam</th>\n",
       "      <th>awayTeam</th>\n",
       "      <th>awayOdds</th>\n",
       "      <th>awaySpread</th>\n",
       "      <th>awaySpreadOdds</th>\n",
       "      <th>homeOdds</th>\n",
       "      <th>homeSpread</th>\n",
       "      <th>homeSpreadOdds</th>\n",
       "      <th>over</th>\n",
       "      <th>overOdds</th>\n",
       "      <th>underOdds</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ATLGS3252022</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>Golden State Warriors</td>\n",
       "      <td>125</td>\n",
       "      <td>2.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-125</td>\n",
       "      <td>-2.5</td>\n",
       "      <td>100</td>\n",
       "      <td>221.5</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ATLIND3132022</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>Indiana Pacers</td>\n",
       "      <td>590</td>\n",
       "      <td>12.0</td>\n",
       "      <td>100</td>\n",
       "      <td>-590</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>100</td>\n",
       "      <td>237.0</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ATLLAC3112022</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>Los Angeles Clippers</td>\n",
       "      <td>250</td>\n",
       "      <td>7.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-250</td>\n",
       "      <td>-7.5</td>\n",
       "      <td>100</td>\n",
       "      <td>226.5</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ATLMEM3182022</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>Memphis Grizzlies</td>\n",
       "      <td>-185</td>\n",
       "      <td>-5.5</td>\n",
       "      <td>100</td>\n",
       "      <td>185</td>\n",
       "      <td>5.5</td>\n",
       "      <td>100</td>\n",
       "      <td>237.5</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ATLNO3202022</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>New Orleans Pelicans</td>\n",
       "      <td>145</td>\n",
       "      <td>3.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-145</td>\n",
       "      <td>-3.5</td>\n",
       "      <td>100</td>\n",
       "      <td>233.0</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
<<<<<<< HEAD
       "      <th>201</th>\n",
       "      <td>TORPHI4232022</td>\n",
       "      <td>Toronto Raptors</td>\n",
       "      <td>Philadelphia 76ers</td>\n",
       "      <td>-130</td>\n",
       "      <td>-2.5</td>\n",
       "      <td>100</td>\n",
       "      <td>130</td>\n",
       "      <td>2.5</td>\n",
       "      <td>100</td>\n",
       "      <td>212.5</td>\n",
=======
       "      <th>161</th>\n",
       "      <td>MIAATL4172022</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>240</td>\n",
       "      <td>7.0</td>\n",
       "      <td>100</td>\n",
       "      <td>-240</td>\n",
       "      <td>-7.0</td>\n",
       "      <td>100</td>\n",
       "      <td>219.5</td>\n",
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
<<<<<<< HEAD
       "      <th>202</th>\n",
       "      <td>TORPHI4282022</td>\n",
       "      <td>Toronto Raptors</td>\n",
       "      <td>Philadelphia 76ers</td>\n",
       "      <td>-105</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>100</td>\n",
       "      <td>105</td>\n",
       "      <td>1.0</td>\n",
       "      <td>100</td>\n",
       "      <td>209.5</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>UTADAL4212022</td>\n",
       "      <td>Utah Jazz</td>\n",
       "      <td>Dallas Mavericks</td>\n",
       "      <td>315</td>\n",
       "      <td>8.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-315</td>\n",
       "      <td>-8.5</td>\n",
       "      <td>100</td>\n",
       "      <td>208.0</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>UTADAL4232022</td>\n",
       "      <td>Utah Jazz</td>\n",
       "      <td>Dallas Mavericks</td>\n",
       "      <td>200</td>\n",
       "      <td>5.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-200</td>\n",
       "      <td>-5.5</td>\n",
       "      <td>100</td>\n",
       "      <td>214.0</td>\n",
=======
       "      <th>162</th>\n",
       "      <td>MILCHI4172022</td>\n",
       "      <td>Milwaukee Bucks</td>\n",
       "      <td>Chicago Bulls</td>\n",
       "      <td>450</td>\n",
       "      <td>10.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-450</td>\n",
       "      <td>-10.5</td>\n",
       "      <td>100</td>\n",
       "      <td>230.0</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>PHITOR4162022</td>\n",
       "      <td>Philadelphia 76ers</td>\n",
       "      <td>Toronto Raptors</td>\n",
       "      <td>170</td>\n",
       "      <td>4.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-170</td>\n",
       "      <td>-4.5</td>\n",
       "      <td>100</td>\n",
       "      <td>216.0</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>PHITOR4182022</td>\n",
       "      <td>Philadelphia 76ers</td>\n",
       "      <td>Toronto Raptors</td>\n",
       "      <td>245</td>\n",
       "      <td>7.0</td>\n",
       "      <td>100</td>\n",
       "      <td>-245</td>\n",
       "      <td>-7.0</td>\n",
       "      <td>100</td>\n",
       "      <td>218.0</td>\n",
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
<<<<<<< HEAD
       "      <th>205</th>\n",
       "      <td>UTADAL4282022</td>\n",
       "      <td>Utah Jazz</td>\n",
       "      <td>Dallas Mavericks</td>\n",
       "      <td>-105</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>100</td>\n",
       "      <td>105</td>\n",
       "      <td>1.0</td>\n",
       "      <td>100</td>\n",
       "      <td>210.5</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>206 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            gameID         homeTeam               awayTeam  awayOdds  \\\n",
       "0     ATLGS3252022    Atlanta Hawks  Golden State Warriors       125   \n",
       "1    ATLIND3132022    Atlanta Hawks         Indiana Pacers       590   \n",
       "2    ATLLAC3112022    Atlanta Hawks   Los Angeles Clippers       250   \n",
       "3    ATLMEM3182022    Atlanta Hawks      Memphis Grizzlies      -185   \n",
       "4     ATLNO3202022    Atlanta Hawks   New Orleans Pelicans       145   \n",
       "..             ...              ...                    ...       ...   \n",
       "201  TORPHI4232022  Toronto Raptors     Philadelphia 76ers      -130   \n",
       "202  TORPHI4282022  Toronto Raptors     Philadelphia 76ers      -105   \n",
       "203  UTADAL4212022        Utah Jazz       Dallas Mavericks       315   \n",
       "204  UTADAL4232022        Utah Jazz       Dallas Mavericks       200   \n",
       "205  UTADAL4282022        Utah Jazz       Dallas Mavericks      -105   \n",
=======
       "      <th>165</th>\n",
       "      <td>PHONO4172022</td>\n",
       "      <td>Phoenix Suns</td>\n",
       "      <td>New Orleans Pelicans</td>\n",
       "      <td>445</td>\n",
       "      <td>10.5</td>\n",
       "      <td>100</td>\n",
       "      <td>-445</td>\n",
       "      <td>-10.5</td>\n",
       "      <td>100</td>\n",
       "      <td>224.0</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>166 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            gameID            homeTeam               awayTeam  awayOdds  \\\n",
       "0     ATLGS3252022       Atlanta Hawks  Golden State Warriors       125   \n",
       "1    ATLIND3132022       Atlanta Hawks         Indiana Pacers       590   \n",
       "2    ATLLAC3112022       Atlanta Hawks   Los Angeles Clippers       250   \n",
       "3    ATLMEM3182022       Atlanta Hawks      Memphis Grizzlies      -185   \n",
       "4     ATLNO3202022       Atlanta Hawks   New Orleans Pelicans       145   \n",
       "..             ...                 ...                    ...       ...   \n",
       "161  MIAATL4172022          Miami Heat          Atlanta Hawks       240   \n",
       "162  MILCHI4172022     Milwaukee Bucks          Chicago Bulls       450   \n",
       "163  PHITOR4162022  Philadelphia 76ers        Toronto Raptors       170   \n",
       "164  PHITOR4182022  Philadelphia 76ers        Toronto Raptors       245   \n",
       "165   PHONO4172022        Phoenix Suns   New Orleans Pelicans       445   \n",
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
       "\n",
       "     awaySpread  awaySpreadOdds  homeOdds  homeSpread  homeSpreadOdds   over  \\\n",
       "0           2.5             100      -125        -2.5             100  221.5   \n",
       "1          12.0             100      -590       -12.0             100  237.0   \n",
       "2           7.5             100      -250        -7.5             100  226.5   \n",
       "3          -5.5             100       185         5.5             100  237.5   \n",
       "4           3.5             100      -145        -3.5             100  233.0   \n",
       "..          ...             ...       ...         ...             ...    ...   \n",
<<<<<<< HEAD
       "201        -2.5             100       130         2.5             100  212.5   \n",
       "202        -1.0             100       105         1.0             100  209.5   \n",
       "203         8.5             100      -315        -8.5             100  208.0   \n",
       "204         5.5             100      -200        -5.5             100  214.0   \n",
       "205        -1.0             100       105         1.0             100  210.5   \n",
=======
       "161         7.0             100      -240        -7.0             100  219.5   \n",
       "162        10.5             100      -450       -10.5             100  230.0   \n",
       "163         4.5             100      -170        -4.5             100  216.0   \n",
       "164         7.0             100      -245        -7.0             100  218.0   \n",
       "165        10.5             100      -445       -10.5             100  224.0   \n",
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
       "\n",
       "     overOdds  underOdds  y  \n",
       "0         100        100  1  \n",
       "1         100        100  1  \n",
       "2         100        100  1  \n",
       "3         100        100  1  \n",
       "4         100        100  0  \n",
       "..        ...        ... ..  \n",
<<<<<<< HEAD
       "201       100        100  1  \n",
       "202       100        100  0  \n",
       "203       100        100  0  \n",
       "204       100        100  1  \n",
       "205       100        100  0  \n",
       "\n",
       "[206 rows x 13 columns]"
      ]
     },
     "execution_count": 55,
=======
       "161       100        100  1  \n",
       "162       100        100  1  \n",
       "163       100        100  1  \n",
       "164       100        100  1  \n",
       "165       100        100  1  \n",
       "\n",
       "[166 rows x 13 columns]"
      ]
     },
     "execution_count": 5,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 56,
=======
   "execution_count": 6,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [],
   "source": [
    "# Merge sentiment scores with existing dataframe for more features\n",
    "\n",
<<<<<<< HEAD
    "df = pd.merge(df, ss, on=['gameID', 'homeTeam', 'awayTeam'], how='left')\n",
    "df = df.drop('total_tweets_analyzed', 1)\n",
    "df = df.fillna(0)"
=======
    "# df = pd.merge(df, ss, on=['gameID', 'homeTeam', 'awayTeam'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def oddsConverter(odds):\n",
    "    if odds<0:\n",
    "        return 1 - (100 / odds);\n",
    "    else:\n",
    "        return 1 + (odds / 100);"
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 57,
=======
   "execution_count": 8,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [],
   "source": [
    "df.awayOdds = np.where(df.awayOdds < 0, 1 - (100 / df.awayOdds), 1 + (df.awayOdds / 100))\n",
    "df.homeOdds = np.where(df.homeOdds < 0, 1 - (100 / df.homeOdds), 1 + (df.homeOdds / 100))\n",
    "df.overOdds = np.where(df.overOdds < 0, 1 - (100 / df.overOdds), 1 + (df.overOdds / 100))\n",
    "df.underOdds = np.where(df.underOdds < 0, 1 - (100 / df.underOdds), 1 + (df.underOdds / 100))"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.iloc[:, 3:].drop('y', 1)\n",
=======
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.iloc[:, 3:-1]\n",
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
    "y = df.y\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n",
    "model = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 62,
=======
   "execution_count": 22,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
<<<<<<< HEAD
      "CPU times: user 2 µs, sys: 1e+03 ns, total: 3 µs\n",
      "Wall time: 6.91 µs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/JARVIS/opt/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
=======
      "CPU times: user 2 µs, sys: 1 µs, total: 3 µs\n",
      "Wall time: 5.72 µs\n"
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
<<<<<<< HEAD
     "execution_count": 62,
=======
     "execution_count": 22,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%time\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/JARVIS/opt/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.7142857142857143"
      ]
     },
     "execution_count": 63,
=======
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6764705882352942"
      ]
     },
     "execution_count": 23,
>>>>>>> 8ba6425e01c189720d1430b0c9c73bf9435c1436
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)\n",
    "accuracy_score(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
